"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Utils = void 0;
var Utils = /** @class */ (function () {
    function Utils() {
    }
    Utils.getWordBoundsAtPosition = function (str, position) {
        var isSpace = function (c) { return /\s/.exec(c); };
        var start = position - 1;
        var end = position;
        while (start >= 0 && !isSpace(str[start])) {
            start -= 1;
        }
        start = Math.max(0, start + 1);
        while (end < str.length && !isSpace(str[end])) {
            end += 1;
        }
        end = Math.max(start, end);
        return [start, end];
    };
    Utils.breakOnWord = function (text, breakAtIndex) {
        var currentText = "" + text;
        var brokenParts = [];
        if (text.length < breakAtIndex || !breakAtIndex) {
            return [text];
        }
        while (currentText.length > 0) {
            if (currentText.length < breakAtIndex) {
                brokenParts.push(currentText);
                currentText = '';
                continue;
            }
            var start = this.getWordBoundsAtPosition(currentText, breakAtIndex)[0];
            if (start == 0) {
                start = breakAtIndex;
            }
            brokenParts.push(currentText.substring(0, start).trim());
            currentText = currentText.substring(start);
        }
        return brokenParts;
    };
    Utils.orderedCallback = function (c1, c2, c1First) {
        if (c1First) {
            c1();
            c2();
        }
        else {
            c2();
            c1();
        }
    };
    Utils.prependAndAppendData = function (data, prepend, append) {
        data.unshift.apply(data, prepend);
        data.push.apply(data, append);
    };
    return Utils;
}());
exports.Utils = Utils;
//# sourceMappingURL=utils.js.map