"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.QRCommand = void 0;
var command_1 = require("./command");
var qr = require("qr-pure-image");
var rasterImage_1 = require("../../image/rasterImage");
var constants_1 = require("../../constants");
var debug_1 = require("../../debug");
var QRCommand = /** @class */ (function (_super) {
    __extends(QRCommand, _super);
    function QRCommand(text, options) {
        var _this = _super.call(this) || this;
        _this.text = text;
        _this.options = options;
        _this.key = 'qr';
        return _this;
    }
    QRCommand.prototype.build = function (compiler) {
        var _a;
        var size = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.size) || 200;
        if (size > constants_1.MAX_IMAGE_WIDTH) {
            size = constants_1.MAX_IMAGE_WIDTH;
        }
        try {
            var bmp = qr.bitmap(this.text, size);
            var rasterImage = rasterImage_1.RasterImageGenerator.fromBitmap(bmp.data, bmp.size, bmp.size);
            return compiler.rasterImage(rasterImage, this.options);
        }
        catch (e) {
            debug_1.Debug.error('Could not generate QR code', e);
            return [];
        }
    };
    return QRCommand;
}(command_1.Command));
exports.QRCommand = QRCommand;
//# sourceMappingURL=qrCommand.js.map