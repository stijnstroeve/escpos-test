import { ImageOptions } from '../escpos/commands/imageCommand';
import { RasterImage } from './rasterImage';
export declare type LoadedImage = {
    data: number[];
    colors: number;
    width: number;
    height: number;
};
export declare abstract class ImageProvider {
    abstract load(url: string, options: ImageOptions): Promise<LoadedImage | null>;
}
export declare type ImageMetadata = {
    width: number;
    rasterWidth: number;
    height: number;
    colors: number;
};
export declare class Image {
    /**
     * Converts the given bitmap into a gray bitmap.
     * @param bitmap
     * @private
     */
    static grayBitmap(bitmap: LoadedImage): Uint8Array;
    /**
     * Converts the given gray bitmap into a dithered bitmap.
     *
     * From: https://github.com/petrkutalek/png2pos/blob/a7aad5f6430775627db83015d8550f7720eecc41/png2pos.c#L393
     * https://tannerhelland.com/2012/12/28/dithering-eleven-algorithms-source-code.html
     * @param bitmap
     * @param grayBitmap
     * @private
     */
    static ditherBitmap(grayBitmap: Uint8Array, { width, height }: ImageMetadata): Uint8Array;
    private static getCacheKey;
    static loadFromUrl(provider: ImageProvider, url: string, options?: ImageOptions): Promise<RasterImage | null>;
}
