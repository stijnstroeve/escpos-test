"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Device = void 0;
var events_1 = require("events");
var escpos_1 = require("@storekeeper/escpos");
var Device = /** @class */ (function (_super) {
    __extends(Device, _super);
    function Device() {
        var _this = _super.call(this) || this;
        _this.connected = false;
        _this.on('connect', function () {
            _this.connected = true;
            escpos_1.Debug.success(_this.constructor.name + " connected");
        });
        _this.on('close', function () {
            _this.connected = false;
            escpos_1.Debug.process(_this.constructor.name + " closed");
        });
        _this.on('error', function (error) {
            escpos_1.Debug.error(_this.constructor.name + " received error", error);
        });
        _this.on('data_write', function (data) {
            escpos_1.Debug.process(_this.constructor.name + " wrote " + data.length + " bytes");
        });
        return _this;
    }
    return Device;
}(events_1.EventEmitter));
exports.Device = Device;
//# sourceMappingURL=device.js.map