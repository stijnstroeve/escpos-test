/// <reference types="node" />
import { EventEmitter } from 'events';
export interface IDeviceInfo<DeviceData> {
    id: string;
    name: string;
    type: string;
    data: DeviceData;
}
export declare abstract class Device<DeviceData> extends EventEmitter {
    connected: boolean;
    protected constructor();
    abstract write(data: Uint8Array, cb?: (err?: any) => void): void;
    abstract open(): void;
    abstract close(): void;
    abstract getDeviceInfo(): IDeviceInfo<DeviceData> | Promise<IDeviceInfo<DeviceData>>;
}
