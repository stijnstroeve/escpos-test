import { Device, IDeviceInfo } from '@storekeeper/escpos-device';
import { usb } from 'usb';
import { OutEndpoint } from 'usb/dist/usb/endpoint';
import { Interface } from 'usb/dist/usb/interface';
export declare type USBDeviceData = {
    vendorIdHex: string;
    productIdHex: string;
    manufacturer: string;
    product: string;
    serialNumber: string;
};
export declare class USBDevice extends Device<USBDeviceData> {
    device: usb.Device | undefined;
    endpoint?: OutEndpoint | null;
    iface: Interface | null;
    constructor();
    initialize(vendorId: number, productId: number): void;
    initializeBySerial(serial: string): Promise<void>;
    initializeById(id: string): Promise<void>;
    open(): void;
    write(data: Uint8Array, cb: (err?: any) => void): void;
    close(): void;
    getDeviceInfo(): Promise<IDeviceInfo<USBDeviceData>>;
    static findUSBDevices(): usb.Device[];
}
