import { Command } from './commands/command';
import { TextOptions } from './commands/textCommand';
import { Table } from './commands/tableCommand';
import { BarcodeOptions } from './commands/barcodeCommand';
import { LineOptions } from './commands/lineCommand';
import { ImageOptions } from './commands/imageCommand';
import { EscPosPrinterOptions } from './escposPrinterOptions';
export declare type AlignHTOptions = {
    alignHT?: 'left' | 'center' | 'right';
};
export declare class EscPosBuilder {
    commands: Command[];
    constructor();
    /**
     * Adds a new text layout item.
     * @param text The text to display.
     * @param options
     */
    text(text: string, options?: TextOptions): EscPosBuilder;
    table<T, K extends keyof T>(table: Table<T, K>): EscPosBuilder;
    barcode(barcode: string, options?: BarcodeOptions): EscPosBuilder;
    line(options?: LineOptions): EscPosBuilder;
    linefeed(amount?: number): EscPosBuilder;
    lineSpacing(spacing?: number): EscPosBuilder;
    cut(): EscPosBuilder;
    /**
     * Should only be used for development purposes.
     */
    raw(data: number[]): EscPosBuilder;
    image(url: string, options?: ImageOptions): EscPosBuilder;
    build(options?: EscPosPrinterOptions): Promise<Uint8Array>;
    serialize(): string;
    private addCommand;
    static from(serializedCommands: string): EscPosBuilder;
}
